name: Deploy User Server

on:
  push:
    branches: [ "main" ]
    paths:
      - 'backend/user_server/**'

jobs:
  deploy-user-server:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: ECR Login
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
            registry-type: public
        env:
            AWS_DEFAULT_REGION: us-east-1
            AWS_REGION: us-east-1

      - name: Build Docker image for user_server
        env:
          ECR_REGISTRY: public.ecr.aws/k8s0f8l3
          ECR_REPOSITORY_NAMESPACE: neves
          VERSION: ${{ github.sha }}
        run: |
          docker build --cache-from $ECR_REGISTRY/$ECR_REPOSITORY_NAMESPACE/user_server:$VERSION -t $ECR_REGISTRY/$ECR_REPOSITORY_NAMESPACE/user_server:$VERSION -t $ECR_REGISTRY/$ECR_REPOSITORY_NAMESPACE/user_server:latest -f backend/user_server/Dockerfile backend/user_server

      - name: Push Docker image to ECR
        if: success()
        env:
          ECR_REGISTRY: public.ecr.aws/k8s0f8l3
          ECR_REPOSITORY_NAMESPACE: neves
          VERSION: ${{ github.sha }}
        run: |
          docker push $ECR_REGISTRY/$ECR_REPOSITORY_NAMESPACE/user_server:$VERSION
          docker push $ECR_REGISTRY/$ECR_REPOSITORY_NAMESPACE/user_server:latest